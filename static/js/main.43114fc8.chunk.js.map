{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACxB,OACC,sBAAKC,UAAW,sDAAhB,UACG,qBAAKC,IAAK,SAASC,IAAG,+BAA0BL,EAA1B,cACtB,gCACI,6BAAKC,IACL,4BAAIC,WCcEI,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAEKA,EAAOC,KAAI,SAACC,EAAMC,GACf,OACG,cAAC,EAAD,CAEEV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCKLC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACI,qBAAKT,UAAU,MAAf,SACD,uBACAA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCCI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAO,kBAAmBC,OAAQ,SAApE,SACIJ,EAAMK,YCqBGC,E,kDArBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAO,CACXC,UAAU,GAHM,E,8DAQIC,EAAOC,GAC1BC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAK1B,OAAGG,KAAKJ,MAAMC,SACN,wCAEDG,KAAKX,MAAMK,a,GAlBKQ,aC4CZC,G,wDAxCd,aAAe,IAAD,8BACP,gBAcPC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAdtC,EAAKZ,MAAQ,CACdjB,OAAQ,GACL2B,YAAc,IAJN,E,gEASO,IAAD,OACnBG,MAAM,8CACFC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAS,EAAKZ,SAAS,CAACtB,OAAQkC,S,+BAOjC,IAAD,EAC2Bb,KAAKJ,MAA7BjB,EADH,EACGA,OAAQ2B,EADX,EACWA,YACVQ,EAAiBnC,EAAOoC,QAAQ,SAAAC,GACvC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASZ,EAAYW,kBAEpD,OAAQtC,EAAOwC,OAGd,sBAAK5C,UAAU,KAAf,UACQ,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACJ,cAAC,EAAD,CAAUzB,OAAUmC,WAPzB,6C,GA1BYZ,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.43114fc8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id, name, email}) => {\r\n\treturn (\r\n\t\t<div className= 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'> \r\n\t\t   <img alt= 'robots' src={`https://robohash.org/${id}?200x200`}/>\r\n\t\t   <div>\r\n\t\t       <h2>{name}</h2>\r\n\t\t       <p>{email}</p>\r\n\t\t   </div>\r\n\t    </div>\r\n\t);\r\n} \r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t   {\r\n\t\t   \t robots.map((user, i) => {\r\n\t\t        return(\r\n\t\t           <Card \r\n\t\t             key={i} \r\n\t\t             id={robots[i].id} \r\n\t\t             name={robots[i].name} \r\n\t\t             email={robots[i].email}\r\n\t\t             />\r\n\t\t        );\r\n\t\t     })\r\n\t\t   }\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\treturn (\r\n\t    <div className='pa2'>\r\n\t\t  <input \r\n\t\t  className='pa3 ba b--green bg-lightest-blue'\r\n\t\t  type='search' \r\n\t\t  placeholder='search robots'\r\n\t\t  onChange={searchChange}\r\n\t\t  />\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n\treturn(\r\n\t\t<div style={{ overflow: 'scroll', border:'2px solid white', height: '800px'}}>\r\n\t\t   {props.children}\r\n\t\t</div>\r\n  );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\n// we can wrap a component with ErrorBoundry component so it will catch an error,\r\n// display something instead of breaking the whole website\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\t// if anything errors out it wil run this lifecycle hook\r\n    componentDidCatch (error, info) {\r\n\t   this.setState({ hasError: true })\r\n    }\r\n\r\n    // children will be anything thats between the ErrorBoundry\r\n    render(){\r\n\t   if(this.state.hasError){\r\n\t\t   return <h1>ooops!</h1>\r\n\t   }\r\n\t   return this.props.children\r\n    }\r\n}    \r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n        super()\r\n\t    this.state = {\r\n\t\t  robots :[],\r\n\t      searchfield : ''\r\n\t    } \r\n\t}\r\n \r\n // here we dont need arrow function because its build in react\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t   .then(response=> response.json())\r\n\t\t   .then(users =>{this.setState({robots: users})});\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t}\r\n\r\n\trender(){\r\n\t   const { robots, searchfield } = this.state;\r\n\t   const filteredRobots = robots.filter( robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t   })\r\n\t   return !robots.length ?\r\n\t   \t <h1>Loading</h1> :\r\n\t     (\r\n\t\t   <div className='tc'>\r\n             <h1 className='f1'>RoboFriends</h1>\r\n             <SearchBox searchChange={this.onSearchChange} />\r\n             <Scroll>\r\n               <ErrorBoundry>\r\n\t\t         <CardList robots= { filteredRobots }/>\r\n\t\t       </ErrorBoundry>\r\n\t\t     </Scroll>\r\n\t\t   </div> \r\n\t     );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n// import { robots } from './robots';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}